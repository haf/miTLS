(*
 * Copyright (c) 2012--2013 MSR-INRIA Joint Center. All rights reserved.
 * 
 * This code is distributed under the terms for the CeCILL-B (version 1)
 * license.
 * 
 * You should have received a copy of the CeCILL-B (version 1) license
 * along with this program.  If not, see:
 * 
 *   http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt
 *)

module SessionDB

(* Database storing live sessions towards resumption. Trusted. *)

open TLSInfo

type StorableSession = si:SessionInfo * (;si) PRF.masterSecret

type SessionDB
type SessionIndex = sessionID * Role * Cert.hint

predicate Authorize of Role * SessionInfo

val create: config -> SessionDB
val select: SessionDB -> x:SessionIndex -> res:(StorableSession option){
  !sid,r,h,si,ms. x = (sid,r,h) /\ res = Some((si,ms)) => Authorize(r,si)}
val insert: SessionDB -> x:SessionIndex -> res:StorableSession{
  !sid,r,h,si,ms. x = (sid,r,h) /\ res = (si,ms) => Authorize(r,si)}
 -> SessionDB
val remove: SessionDB -> SessionIndex -> SessionDB
val getAllStoredIDs: SessionDB -> SessionIndex list
